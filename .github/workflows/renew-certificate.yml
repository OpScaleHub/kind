name: Renew Certificate

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sundays at midnight
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  renew-certificate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential  # Replacing alpine-sdk with build-essential

      - name: Install Certbot
        run: |
          sudo apt-get update
          sudo apt-get install -y certbot python3-certbot-dns-cloudflare

      - name: Set environment variables
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          export DOMAIN="local.opscale.ir"
          echo "dns_cloudflare_api_token = ${API_TOKEN}" > cloudflare.ini
          chmod 600 cloudflare.ini

      - name: Renew certificate and create Kubernetes secret file
        env:
          DOMAIN: "local.opscale.ir"
        run: |
          WORK_DIR="/tmp/letsencrypt"
          mkdir -p $WORK_DIR
          certbot certonly --dns-cloudflare --dns-cloudflare-credentials cloudflare.ini -d "$DOMAIN" -d "*.$DOMAIN" --register-unsafely-without-email --agree-tos --server https://acme-v02.api.letsencrypt.org/directory --config-dir $WORK_DIR --work-dir $WORK_DIR --logs-dir $WORK_DIR
          TLS_CRT=$(cat $WORK_DIR/live/"$DOMAIN"/fullchain.pem | base64 -w 0)
          TLS_KEY=$(cat $WORK_DIR/live/"$DOMAIN"/privkey.pem | base64 -w 0)
          cat <<EOF > wildcard-tls-secret.yaml
          apiVersion: v1
          data:
            tls.crt: $TLS_CRT
            tls.key: $TLS_KEY
          kind: Secret
          metadata:
            name: wildcard-tls-secret
          type: Opaque
          EOF

      - name: Upload Kubernetes secret as artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: wildcard-tls-secret
          path: wildcard-tls-secret.yaml

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "renew-certificate-$(date +'%Y%m%d%H%M%S')"
          release_name: "Renew Certificate - $(date +'%Y-%m-%d %H:%M:%S')"
          body: "This release contains the renewed wildcard TLS certificate."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: wildcard-tls-secret.yaml
          asset_name: wildcard-tls-secret.yaml
          asset_content_type: application/x-yaml