name: Renew Ingress Images
permissions:
  contents: write
  pull-requests: write
  packages: write

on:
  schedule:
    # Runs weekly on Monday at 00:00
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  renew-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | skopeo login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Mirror images
        run: |
          # Controller Image
          CONTROLLER_SOURCE_IMAGE=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/controller")).name' kind/ingress-nginx/kustomization.yaml)
          CONTROLLER_DEST_IMAGE=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/controller")).newName' kind/ingress-nginx/kustomization.yaml)
          CONTROLLER_TAG=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/controller")).newTag' kind/ingress-nginx/kustomization.yaml)
          skopeo copy docker://${CONTROLLER_SOURCE_IMAGE}:${CONTROLLER_TAG} docker://${CONTROLLER_DEST_IMAGE}:${CONTROLLER_TAG}
          
          # Certgen Image
          CERTGEN_SOURCE_IMAGE=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/kube-webhook-certgen")).name' kind/ingress-nginx/kustomization.yaml)
          CERTGEN_DEST_IMAGE=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/kube-webhook-certgen")).newName' kind/ingress-nginx/kustomization.yaml)
          CERTGEN_TAG=$(yq e '(.images[] | select(.name == "registry.k8s.io/ingress-nginx/kube-webhook-certgen")).newTag' kind/ingress-nginx/kustomization.yaml)
          skopeo copy docker://${CERTGEN_SOURCE_IMAGE}:${CERTGEN_TAG} docker://${CERTGEN_DEST_IMAGE}:${CERTGEN_TAG}
