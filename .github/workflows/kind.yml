name: Create and publish a Docker image

on:
  push:
    paths:
      - 'Containerfile'
      - 'version.txt'
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Check changes
        id: check_changes
        run: |
          git fetch origin main --depth=1
          if git diff --quiet origin/main HEAD -- Dockerfile; then
            echo "dockerfile_changed=false" >> $GITHUB_OUTPUT
          else
            echo "dockerfile_changed=true" >> $GITHUB_OUTPUT
          fi

          if git diff --quiet origin/main HEAD -- version.txt; then
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        if: steps.check_changes.outputs.dockerfile_changed == 'true' || steps.check_changes.outputs.version_changed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({
              auth: process.env.GITHUB_TOKEN
            });

            const owner = context.repo.owner;
            const repo = context.repo.repo;

            let newVersion;

            // Check if version.txt exists and was changed
            if (fs.existsSync('version.txt') && process.env.VERSION_CHANGED === 'true') {
              newVersion = fs.readFileSync('version.txt', 'utf8').trim();
            } else {
              // Auto-increment version for Dockerfile changes
              const latestRelease = await octokit.repos.getLatestRelease({
                owner,
                repo,
              }).catch(() => null);

              newVersion = 'v0.1.0'; // Default initial version
              if (latestRelease) {
                const latestTag = latestRelease.data.tag_name;
                const versionRegex = /^v(\d+)\.(\d+)\.(\d+)$/;
                const match = latestTag.match(versionRegex);

                if (match) {
                  let major = parseInt(match[1]);
                  let minor = parseInt(match[2]);
                  let patch = parseInt(match[3]);
                  patch++;
                  newVersion = `v${major}.${minor}.${patch}`;
                }
              }
            }

            // Create a new release
            const createReleaseResponse = await octokit.repos.createRelease({
              owner,
              repo,
              tag_name: newVersion,
              name: newVersion,
              body: 'Release created from workflow',
              draft: false,
              prerelease: false
            });

            console.log(`Release created: ${createReleaseResponse.data.html_url}`);
            return newVersion;
        env:
          VERSION_CHANGED: ${{ steps.check_changes.outputs.version_changed }}

      - name: Tag image as stable
        if: steps.check_changes.outputs.dockerfile_changed == 'true' || steps.check_changes.outputs.version_changed == 'true'
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable